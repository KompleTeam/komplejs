/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.21.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Binary = string;
export interface InstantiateMsg {
  metadata_type: Metadata;
}
export type ExecuteMsg = {
  create_collection: {
    code_id: number;
    collection_config: CollectionConfig;
    collection_info: CollectionInfo;
    fund_info: CollectionFundInfo;
    linked_collections?: number[] | null;
    metadata_info: MetadataInfo;
    token_info: TokenInfo;
  };
} | {
  update_public_collection_creation: {
    public_collection_creation: boolean;
  };
} | {
  update_collection_mint_lock: {
    collection_id: number;
    lock: boolean;
  };
} | {
  mint: {
    collection_id: number;
    metadata_id?: number | null;
  };
} | {
  admin_mint: {
    collection_id: number;
    metadata_id?: number | null;
    recipient: string;
  };
} | {
  permission_mint: {
    mint_msg: MintMsg;
    permission_msg: Binary;
  };
} | {
  update_operators: {
    addrs: string[];
  };
} | {
  update_linked_collections: {
    collection_id: number;
    linked_collections: number[];
  };
} | {
  update_collection_status: {
    collection_id: number;
    is_blacklist: boolean;
  };
} | {
  lock_execute: {};
} | {
  update_creators: {
    addrs: string[];
  };
} | {
  receive: Cw20ReceiveMsg;
};
export type Timestamp = Uint64;
export type Uint64 = string;
export type Collections = "standard" | "komple";
export type Metadata = "standard" | "shared" | "dynamic";
export type Uint128 = string;
export interface CollectionConfig {
  ipfs_link?: string | null;
  max_token_limit?: number | null;
  per_address_limit?: number | null;
  start_time?: Timestamp | null;
}
export interface CollectionInfo {
  collection_type: Collections;
  description: string;
  external_link?: string | null;
  image: string;
  name: string;
}
export interface CollectionFundInfo {
  cw20_address?: string | null;
  denom: string;
  is_native: boolean;
}
export interface MetadataInfo {
  code_id: number;
  instantiate_msg: InstantiateMsg;
}
export interface TokenInfo {
  minter: string;
  symbol: string;
}
export interface MintMsg {
  collection_id: number;
  metadata_id?: number | null;
  recipient: string;
}
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export type QueryMsg = {
  config: {};
} | {
  collection_address: {
    collection_id: number;
  };
} | {
  collection_info: {
    collection_id: number;
  };
} | {
  operators: {};
} | {
  linked_collections: {
    collection_id: number;
  };
} | {
  collections: {
    blacklist: boolean;
    limit?: number | null;
    start_after?: number | null;
  };
} | {
  creators: {};
} | {
  mint_lock: {
    collection_id: number;
  };
};
export interface MigrateMsg {}
export interface ResponseWrapperForString {
  data: string;
  query: string;
}
export interface ResponseWrapperForCollectionInfo {
  data: CollectionInfo;
  query: string;
}
export interface ResponseWrapperForArrayOfCollectionsResponse {
  data: CollectionsResponse[];
  query: string;
}
export interface CollectionsResponse {
  address: string;
  collection_id: number;
}
export type Addr = string;
export interface ResponseWrapperForConfig {
  data: Config;
  query: string;
}
export interface Config {
  admin: Addr;
  mint_lock: boolean;
  public_collection_creation: boolean;
}
export interface ResponseWrapperForArrayOfString {
  data: string[];
  query: string;
}
export interface ResponseWrapperForArrayOfUint32 {
  data: number[];
  query: string;
}
export interface ResponseWrapperForBoolean {
  data: boolean;
  query: string;
}